{"version":3,"sources":["components/WeatherBox.jsx","components/App.jsx","index.jsx"],"names":["WeatherBox","d","weather","iconUrl","icon","className","src","alt","Date","datetime","getDay","getDate","getMonth","getFullYear","Math","round","temp","description","low_temp","toFixed","max_temp","App","inputRef","useRef","useState","setWeather","useEffect","localStorage","getItem","setItem","search","city_name","city","fetch","then","res","json","result","current","value","blur","type","ref","autoFocus","placeholder","onKeyPress","e","key","data","country_code","strTime","toLocaleString","hour","minute","hour12","toDateString","dateBuilder","style","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEaA,EAAa,SAAC,GAAiB,IAEnBC,EAFIC,EAAc,EAAdA,QACnBC,EAAO,qDAAiDD,EAAQA,QAAQE,KAAjE,QAMb,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKC,IAAKH,EAASI,IAAI,SACvB,mBAAGF,UAAU,eAAb,UARaJ,EAQ4B,IAAIO,KAAKN,EAAQO,UALxD,GAAN,OAFc,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DR,EAAES,UAApB,YAAiCT,EAAEU,UAAnC,YADa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACrEV,EAAEW,YAAzD,YAAwEX,EAAEY,kBAMtE,oBAAGR,UAAU,OAAb,UAAqBS,KAAKC,MAAMb,EAAQc,MAAxC,YACA,mBAAGX,UAAU,eAAb,SAA6BH,EAAQA,QAAQe,cAC7C,oBAAGZ,UAAU,eAAb,UAA6BH,EAAQgB,SAASC,QAAQ,GAAtD,UAA4DjB,EAAQkB,SAASD,QAAQ,GAArF,gBCoCGE,MAjDf,WAEE,IAAMC,EAAWC,mBACjB,EAA8BC,mBAAS,IAAvC,mBAAOtB,EAAP,KAAgBuB,EAAhB,KACAC,qBAAU,WAC6B,OAAjCC,aAAaC,QAAQ,SACvBD,aAAaE,QAAQ,OAAQ,aAE/BC,EAAOH,aAAaC,QAAQ,WAC3B,IACHF,qBAAU,WAAQC,aAAaE,QAAQ,OAAQ3B,EAAQ6B,aAAc,CAAC7B,IACtE,IAAM4B,EAAS,SAACE,GACdC,MAAM,sDAAD,OAAuDD,EAAvD,0CACFE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJZ,EAAWY,GACXf,EAASgB,QAAQC,MAAQ,GACzBjB,EAASgB,QAAQE,WASvB,OACE,qBAAKnC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,uBAAOoC,KAAK,OAAOC,IAAKpB,EAAUqB,WAAS,EAACC,YAAY,aAAaC,WAAY,SAAAC,GAAqB,UAAVA,EAAEC,KAAiBjB,EAAOR,EAASgB,QAAQC,YAEhH,oBAAhBrC,EAAQ8C,KACf,sBAAK3C,UAAU,kBAAf,UACE,+BAAKH,EAAQ6B,UAAb,IAAyB7B,EAAQ+C,gBACjC,mBAAG5C,UAAU,eAAb,SAdV,SAAqBJ,GACnB,IAAIiD,EAAUjD,EAAEkD,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,IACtF,MAAM,GAAN,OAAUrD,EAAEsD,eAAZ,YAA8BL,GAYOM,CAAY,IAAIhD,QAC7C,sBAAKH,UAAU,gBAAf,UACE,cAAE,EAAF,CAAaH,QAASA,EAAQ8C,KAAK,KACnC,cAAE,EAAF,CAAa9C,QAASA,EAAQ8C,KAAK,KACnC,cAAE,EAAF,CAAa9C,QAASA,EAAQ8C,KAAK,KACnC,cAAE,EAAF,CAAa9C,QAASA,EAAQ8C,KAAK,KACnC,cAAE,EAAF,CAAa9C,QAASA,EAAQ8C,KAAK,WAGpC,mBAAGS,MAAO,CAAEC,UAAW,UAAvB,wC,MC1CbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4268769c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const WeatherBox = ({ weather }) => {\r\n    const iconUrl = `https://www.weatherbit.io/static/img/icons/${weather.weather.icon}.png`;\r\n    function dateBuilder(d) {\r\n        let weekDay = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        return `${weekDay[d.getDay()]} ${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`\r\n    }\r\n    return (\r\n        <div className=\"weather-box\">\r\n            <img src={iconUrl} alt=\"icon\" />\r\n            <p className=\"regular-font\">{dateBuilder(new Date(weather.datetime))}</p>\r\n            <p className=\"temp\">{Math.round(weather.temp)}℃</p>\r\n            <p className=\"regular-font\">{weather.weather.description}</p>\r\n            <p className=\"regular-font\">{weather.low_temp.toFixed(1)}℃/{weather.max_temp.toFixed(1)}℃</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { WeatherBox } from \"./WeatherBox\";\nfunction App() {\n\n  const inputRef = useRef();\n  const [weather, setWeather] = useState({});\n  useEffect(() => {\n    if (localStorage.getItem(\"city\") === null) {\n      localStorage.setItem(\"city\", \"Hyderabad\");\n    }\n    search(localStorage.getItem(\"city\"));\n  }, [])\n  useEffect(() => { localStorage.setItem(\"city\", weather.city_name) }, [weather]);\n  const search = (city) => {\n    fetch(`https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&key=7346ae5ec65146259157fd23a50187dd`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        inputRef.current.value = '';\n        inputRef.current.blur();\n      })\n  }\n\n  function dateBuilder(d) {\n    let strTime = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    return `${d.toDateString()},${strTime}`\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <div className=\"input-group\">\n          <input type=\"text\" ref={inputRef} autoFocus placeholder=\"Search....\" onKeyPress={e => { if (e.key === 'Enter') search(inputRef.current.value) }} />\n        </div>\n        {(typeof weather.data != 'undefined') ? (\n          <div className=\"weather-content\">\n            <h1>{weather.city_name},{weather.country_code}</h1>\n            <p className=\"regular-font\">{dateBuilder(new Date())}</p>\n            <div className=\"weather-group\">\n              < WeatherBox weather={weather.data[0]} />\n              < WeatherBox weather={weather.data[1]} />\n              < WeatherBox weather={weather.data[2]} />\n              < WeatherBox weather={weather.data[3]} />\n              < WeatherBox weather={weather.data[4]} />\n            </div>\n          </div>\n        ) : (<p style={{ textAlign: 'center' }}> Location not found.</p>)}\n      </div>\n    </div>);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}