{"version":3,"sources":["components/WeatherBlock.jsx","components/WeatherBox.jsx","components/App.jsx","index.jsx"],"names":["WeatherBlock","k","weather","iconUrl","icon","className","Date","dt_txt","toLocaleString","hour","minute","hour12","Math","round","main","temp","src","alt","description","WeatherBox","d","weatherReport","n","value","list","getHours","getWeather","document","getElementsByClassName","classList","toggle","id","onClick","e","width","height","viewBox","fill","xmlns","stroke","strokeWidth","strokeLinecap","items","i","push","getItems","map","getDay","getDate","getMonth","getFullYear","App","inputRef","useRef","useState","setWeatherReport","useEffect","localStorage","getItem","undefined","setItem","search","city","fetch","getUrl","then","res","json","result","alert","current","focus","blur","type","ref","autoFocus","placeholder","onKeyPress","key","name","country","strTime","dateBuilder","temp_min","temp_max","humidity","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1f51b1c8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const WeatherBlock = ({ k, weather }) => {\r\n    let iconUrl = `http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`;\r\n    return (\r\n        <>\r\n            <hr />\r\n            <li><span className=\"weather-time\">{new Date(weather.dt_txt).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })}</span>\r\n                <span className=\"weather-temp\">{Math.round(weather.main.temp)}Â°C</span>\r\n                <img src={iconUrl} alt=\"\" />\r\n                <span className=\"weather-desc\">{weather.weather[0].description}</span>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { WeatherBlock } from \"./WeatherBlock\";\r\nexport const WeatherBox = ({ weatherReport, n }) => {\r\n    let value = 8 * n - new Date(weatherReport.list[0].dt_txt).getHours() / 3;\r\n    function dateBuilder(d) {\r\n        let weekDay = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        return `${weekDay[d.getDay()]}, ${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`\r\n    }\r\n    function getWeather() {\r\n        const list = document.getElementsByClassName('dropdown-list')[n];\r\n        list.classList.toggle('show');\r\n        document.getElementsByClassName('down-arrow')[n].classList.toggle('rotate');\r\n    }\r\n    function getItems() {\r\n        let k = 8 - new Date(weatherReport.list[0].dt_txt).getHours() / 3;\r\n        const items = [];\r\n        for (let i = 0; i <= k; i++)\r\n            items.push(i);\r\n        return items;\r\n    }\r\n    if (n === 0) return (\r\n        <div className=\"weather-box\">\r\n            <p id=\"dropdown-btn\" onClick={e => getWeather()}>Today\r\n                <svg className=\"down-arrow\" width=\"2rem\" height=\"2rem\" viewBox=\"0 0 64 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M3 3L32 38.5L61 3\" id=\"path\" stroke=\"#A6B1E1\" strokeWidth=\"6\" strokeLinecap=\"round\" />\r\n                </svg>\r\n            </p>\r\n            <ul className=\"dropdown-list\">\r\n                {getItems().map(k => (\r\n                    <WeatherBlock key={k} weather={weatherReport.list[k]} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n    else\r\n        return (\r\n            <div className=\"weather-box\">\r\n                <p id=\"dropdown-btn\" onClick={e => getWeather()}>{dateBuilder(new Date(weatherReport.list[value].dt_txt))}\r\n                    <svg className=\"down-arrow\" width=\"2rem\" height=\"2rem\" viewBox=\"0 0 64 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M3 3L32 38.5L61 3\" id=\"path\" stroke=\"#A6B1E1\" strokeWidth=\"6\" strokeLinecap=\"round\" />\r\n                    </svg>\r\n                </p>\r\n                <ul className=\"dropdown-list\">\r\n                    <WeatherBlock weather={weatherReport.list[value]} />\r\n                    <WeatherBlock weather={weatherReport.list[value + 1]} />\r\n                    <WeatherBlock weather={weatherReport.list[value + 2]} />\r\n                    <WeatherBlock weather={weatherReport.list[value + 3]} />\r\n                    <WeatherBlock weather={weatherReport.list[value + 4]} />\r\n                    <WeatherBlock weather={weatherReport.list[value + 5]} />\r\n                    <WeatherBlock weather={weatherReport.list[value + 6]} />\r\n                    <WeatherBlock weather={weatherReport.list[value + 7]} />\r\n                    <WeatherBlock weather={weatherReport.list[value + 8]} />\r\n                </ul>\r\n            </div>\r\n        )\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { WeatherBox } from \"./WeatherBox\";\nfunction App() {\n  const inputRef = useRef();\n  const appid = 'c8f6608fc46e401afd536f7df8644317';\n  const [weatherReport, setWeatherReport] = useState({});\n  useEffect(() => {\n    if (localStorage.getItem(\"city\") === null || localStorage.getItem(\"city\") === undefined)\n      localStorage.setItem(\"city\", \"Hyderabad\");\n    search(localStorage.getItem(\"city\"));\n  }, [])\n  const getUrl = (city) => {\n    return `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${appid}`;\n  }\n  const search = (city) => {\n    if (city === '') {\n      alert(\"Please Enter a city name\");\n      return;\n    }\n    fetch(getUrl(city))\n      .then(res => res.json())\n      .then(result => {\n        if (result.list === undefined) {\n          alert(\"Please Enter a valid city name\")\n          inputRef.current.focus();\n          return;\n        }\n        setWeatherReport(result);\n        localStorage.setItem(\"city\", city);\n        inputRef.current.value = '';\n        inputRef.current.blur();\n      })\n  }\n  function dateBuilder(d) {\n    let strTime = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n    let weekDay = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return `${strTime}, ${weekDay[d.getDay()]}, ${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}.`\n  }\n  return (\n    <div className=\"container\">\n      <h1 className=\"main-title\">REACT 5-DAY WEATHER APP</h1>\n      <div className=\"search-area\">\n        <input type=\"text\" className=\"search-box\" ref={inputRef} autoFocus placeholder=\"Search Location\" onKeyPress={e => { if (e.key === 'Enter') search(inputRef.current.value) }} />\n        <button className=\"search-btn\" onClick={() => { search(inputRef.current.value) }}><i className=\"fas fa-search\"></i></button>\n      </div>\n      {(typeof weatherReport.list != 'undefined') ?\n        (\n          <div className=\"weather-content\">\n            <h1 className=\"location\">{weatherReport.city.name},{weatherReport.city.country}</h1>\n            <p className=\"time\">{dateBuilder(new Date())}</p>\n            <div className=\"current-weather\">\n              <img className=\"mx-auto d-block\" src={`http://openweathermap.org/img/wn/${weatherReport.list[0].weather[0].icon}.png`} alt=\"icon\" />\n              <p><span>{Math.round(weatherReport.list[0].main.temp)}Â°C</span><br />{Math.round(weatherReport.list[0].main.temp_min * 10) / 10}Â°C / {Math.round(weatherReport.list[0].main.temp_max * 10) / 10}Â°C <br />{weatherReport.list[0].weather[0].description}<br />\n                Humidity: {weatherReport.list[0].main.humidity}%</p>\n            </div>\n            <div className=\"weather-group\">\n              < WeatherBox weatherReport={weatherReport} n={0} />\n              < WeatherBox weatherReport={weatherReport} n={1} />\n              < WeatherBox weatherReport={weatherReport} n={2} />\n              < WeatherBox weatherReport={weatherReport} n={3} />\n              < WeatherBox weatherReport={weatherReport} n={4} />\n            </div>\n          </div>\n        )\n        :\n        (\n          <div className=\"loader-container\">\n            <div className=\"loader\"></div>\n          </div>\n        )}\n      <p className=\"last-note\">Made with love by TJ SWAROOP</p>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}