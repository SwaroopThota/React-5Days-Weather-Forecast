{"version":3,"sources":["components/WeatherBlock.jsx","components/WeatherBox.jsx","components/App.jsx","index.jsx"],"names":["WeatherBlock","weather","iconUrl","icon","className","Date","dt_txt","getHours","Math","round","main","temp","src","alt","description","WeatherBox","d","weatherReport","n","value","list","id","onClick","e","document","getElementsByClassName","classList","toggle","getDay","getDate","getMonth","getFullYear","width","height","viewBox","fill","xmlns","stroke","strokeWidth","strokeLinecap","App","inputRef","useRef","useState","setWeatherReport","useEffect","localStorage","getItem","undefined","setItem","search","city","fetch","getUrl","then","res","json","result","alert","current","focus","blur","type","ref","autoFocus","placeholder","onKeyPress","key","name","country","strTime","toLocaleString","hour","minute","hour12","dateBuilder","temp_min","temp_max","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d099428.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const WeatherBlock = ({ weather }) => {\r\n    let iconUrl = `http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`;\r\n    return (\r\n        <>\r\n            <hr />\r\n            <li><span className=\"weather-time\">{new Date(weather.dt_txt).getHours()}:00</span>\r\n                <span className=\"weather-temp\">{Math.round(weather.main.temp)}째C</span>\r\n                <img src={iconUrl} alt=\"\" />\r\n                <span className=\"weather-desc\">{weather.weather[0].description}</span>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { WeatherBlock } from \"./WeatherBlock\";\r\nexport const WeatherBox = ({ weatherReport, n }) => {\r\n    let value = 8 * n - new Date(weatherReport.list[0].dt_txt).getHours() / 3;\r\n    function dateBuilder(d) {\r\n        let weekDay = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        return `${weekDay[d.getDay()]}, ${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`\r\n    }\r\n    function getWeather() {\r\n        const list = document.getElementsByClassName('dropdown-list')[n - 1];\r\n        list.classList.toggle('show');\r\n        document.getElementsByClassName('down-arrow')[n - 1].classList.toggle('rotate');\r\n    }\r\n    return (\r\n        <div className=\"weather-box\">\r\n            <p id=\"dropdown-btn\" onClick={e => getWeather()}>{dateBuilder(new Date(weatherReport.list[value].dt_txt))}\r\n                <svg className=\"down-arrow\" width=\"2rem\" height=\"2rem\" viewBox=\"0 0 64 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M3 3L32 38.5L61 3\" id=\"path\" stroke=\"#A6B1E1\" strokeWidth=\"6\" strokeLinecap=\"round\" />\r\n                </svg>\r\n            </p>\r\n            <ul className=\"dropdown-list\">\r\n                <WeatherBlock weather={weatherReport.list[value]} />\r\n                <WeatherBlock weather={weatherReport.list[value + 1]} />\r\n                <WeatherBlock weather={weatherReport.list[value + 2]} />\r\n                <WeatherBlock weather={weatherReport.list[value + 3]} />\r\n                <WeatherBlock weather={weatherReport.list[value + 4]} />\r\n                <WeatherBlock weather={weatherReport.list[value + 5]} />\r\n                <WeatherBlock weather={weatherReport.list[value + 6]} />\r\n                <WeatherBlock weather={weatherReport.list[value + 7]} />\r\n                <WeatherBlock weather={weatherReport.list[value + 8]} />\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { WeatherBox } from \"./WeatherBox\";\nfunction App() {\n  const inputRef = useRef();\n  const [weatherReport, setWeatherReport] = useState({});\n  useEffect(() => {\n    if (localStorage.getItem(\"city\") === null || localStorage.getItem(\"city\") === undefined)\n      localStorage.setItem(\"city\", \"Hyderabad\");\n    search(localStorage.getItem(\"city\"));\n  }, [])\n  const getUrl = (city) => {\n    return `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=c8f6608fc46e401afd536f7df8644317`;\n  }\n  const search = (city) => {\n    if (city === '') {\n      alert(\"Please Enter a city name\");\n      return;\n    }\n    fetch(getUrl(city))\n      .then(res => res.json())\n      .then(result => {\n        if (result.list === undefined) {\n          alert(\"Please Enter a valid city name\")\n          inputRef.current.focus();\n          return;\n        }\n        setWeatherReport(result);\n        localStorage.setItem(\"city\", city);\n        inputRef.current.value = '';\n        inputRef.current.blur();\n      })\n  }\n  function dateBuilder(d) {\n    let strTime = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n    let weekDay = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return `${strTime}, ${weekDay[d.getDay()]}, ${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}.`\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"main-title\">REACT 5-DAY WEATHER APP</h1>\n      <input type=\"text\" className=\"search-box\" ref={inputRef} autoFocus placeholder=\"Search Location\" onKeyPress={e => { if (e.key === 'Enter') search(inputRef.current.value) }} />\n      <button className=\"search-btn\" onClick={() => { search(inputRef.current.value) }}>Search</button>\n      {(typeof weatherReport.list != 'undefined') ? (\n        <div className=\"weather-content\">\n          <h1 className=\"location\">{weatherReport.city.name},{weatherReport.city.country}</h1>\n          <p className=\"time\">{dateBuilder(new Date())}</p>\n          <div className=\"current-weather\">\n            <img className=\"mx-auto d-block\" src={`http://openweathermap.org/img/wn/${weatherReport.list[0].weather[0].icon}.png`} alt=\"icon\" />\n            <p><span>{Math.round(weatherReport.list[0].main.temp)}째C</span><br />{Math.round(weatherReport.list[0].main.temp_min * 10) / 10}째C/{Math.round(weatherReport.list[0].main.temp_max * 10) / 10}째C <br />{weatherReport.list[0].weather[0].description}</p>\n          </div>\n          <div className=\"weather-group\">\n            < WeatherBox weatherReport={weatherReport} n={1} />\n            < WeatherBox weatherReport={weatherReport} n={2} />\n            < WeatherBox weatherReport={weatherReport} n={3} />\n            < WeatherBox weatherReport={weatherReport} n={4} />\n          </div>\n        </div>\n      ) : (<p> Location not found.</p>)}\n      <p className=\"last-note\">Made with love by TJ SWAROOP</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}