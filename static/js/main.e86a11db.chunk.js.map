{"version":3,"sources":["components/WeatherBox.jsx","components/App.jsx","index.jsx"],"names":["WeatherBox","d","weatherReport","value","n","className","id","onClick","e","document","getElementById","classList","toggle","Date","list","dt_txt","getDay","getDate","getMonth","getFullYear","toString","width","height","viewBox","fill","xmlns","stroke","getHours","Math","round","main","temp","src","weather","icon","alt","description","App","inputRef","useRef","useState","setWeatherReport","search","city","fetch","then","res","json","result","current","blur","type","ref","autoFocus","placeholder","onKeyPress","key","name","country","strTime","toLocaleString","hour","minute","hour12","dateBuilder","temp_min","temp_max","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e86a11db.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const WeatherBox = ({ weatherReport, value, n }) => {\r\n    // const iconUrl = `http://openweathermap.org/img/wn/${weatherReport.list[value].weather[0].icon}.png`;\r\n    function dateBuilder(d) {\r\n        let weekDay = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        return `${weekDay[d.getDay()]}, ${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`\r\n    }\r\n    function getWeather() {\r\n        const list = document.getElementById(`dropdown-list-${n}`);\r\n        list.classList.toggle('show');\r\n        document.getElementById(`down-arrow-${n}`).classList.toggle('rotate');\r\n    }\r\n    return (\r\n        <div className=\"weather-box\">\r\n            <p id=\"dropdown-btn\" onClick={e => getWeather()}>{dateBuilder(new Date(weatherReport.list[value].dt_txt))}\r\n                <svg className=\"downArrow\" id={`down-arrow-${n}`.toString()} width=\"2rem\" height=\"2rem\" viewBox=\"0 0 64 44\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M3 3L32 38.5L61 3\" id=\"path\" stroke=\"#A6B1E1\" stroke-width=\"6\" stroke-linecap=\"round\" />\r\n                </svg>\r\n            </p>\r\n            <ul id={`dropdown-list-${n}`.toString()} className=\"dropdown-list\">\r\n                <hr />\r\n                <li><span className=\"weather-time\">{new Date(weatherReport.list[value].dt_txt).getHours()}:00</span>\r\n                    <span className=\"weather-temp\">{Math.round(weatherReport.list[value].main.temp)}°C</span>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherReport.list[value].weather[0].icon}.png`} alt=\"\" />\r\n                    <span className=\"weather-desc\">{weatherReport.list[value].weather[0].description}</span></li>\r\n                <li><span className=\"weather-time\">{new Date(weatherReport.list[value + 1].dt_txt).getHours()}:00</span>\r\n                    <span className=\"weather-temp\">{Math.round(weatherReport.list[value + 1].main.temp)}°C</span>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherReport.list[value + 1].weather[0].icon}.png`} alt=\"\" />\r\n                    <span className=\"weather-desc\">{weatherReport.list[value + 1].weather[0].description}</span></li>\r\n                <li><span className=\"weather-time\">{new Date(weatherReport.list[value + 2].dt_txt).getHours()}:00</span>\r\n                    <span className=\"weather-temp\">{Math.round(weatherReport.list[value + 2].main.temp)}°C</span>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherReport.list[value + 2].weather[0].icon}.png`} alt=\"\" />\r\n                    <span className=\"weather-desc\">{weatherReport.list[value + 2].weather[0].description}</span></li>\r\n                <li><span className=\"weather-time\">{new Date(weatherReport.list[value + 3].dt_txt).getHours()}:00</span>\r\n                    <span className=\"weather-temp\">{Math.round(weatherReport.list[value + 3].main.temp)}°C</span>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherReport.list[value + 3].weather[0].icon}.png`} alt=\"\" />\r\n                    <span className=\"weather-desc\">{weatherReport.list[value + 3].weather[0].description}</span></li>\r\n                <li><span className=\"weather-time\">{new Date(weatherReport.list[value + 4].dt_txt).getHours()}:00</span>\r\n                    <span className=\"weather-temp\">{Math.round(weatherReport.list[value + 4].main.temp)}°C</span>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherReport.list[value + 4].weather[0].icon}.png`} alt=\"\" />\r\n                    <span className=\"weather-desc\">{weatherReport.list[value + 4].weather[0].description}</span></li>\r\n                <li><span className=\"weather-time\">{new Date(weatherReport.list[value + 5].dt_txt).getHours()}:00</span>\r\n                    <span className=\"weather-temp\">{Math.round(weatherReport.list[value + 5].main.temp)}°C</span>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherReport.list[value + 5].weather[0].icon}.png`} alt=\"\" />\r\n                    <span className=\"weather-desc\">{weatherReport.list[value + 5].weather[0].description}</span></li>\r\n                <li><span className=\"weather-time\">{new Date(weatherReport.list[value + 6].dt_txt).getHours()}:00</span>\r\n                    <span className=\"weather-temp\">{Math.round(weatherReport.list[value + 6].main.temp)}°C</span>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherReport.list[value + 6].weather[0].icon}.png`} alt=\"\" />\r\n                    <span className=\"weather-desc\">{weatherReport.list[value + 6].weather[0].description}</span></li>\r\n                <li><span className=\"weather-time\">{new Date(weatherReport.list[value + 7].dt_txt).getHours()}:00</span>\r\n                    <span className=\"weather-temp\">{Math.round(weatherReport.list[value + 7].main.temp)}°C</span>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherReport.list[value + 7].weather[0].icon}.png`} alt=\"\" />\r\n                    <span className=\"weather-desc\">{weatherReport.list[value + 7].weather[0].description}</span></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from \"react\";\nimport { WeatherBox } from \"./WeatherBox\";\nfunction App() {\n\n  const inputRef = useRef();\n  const [weatherReport, setWeatherReport] = useState({});\n  let n = 9 - Math.round((new Date()).getHours() / 3);\n  const search = (city) => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=2b844d0a09ea60c997a5602a6fc95808`)\n      .then(res => res.json())\n      .then(result => {\n        setWeatherReport(result);\n        inputRef.current.value = '';\n        inputRef.current.blur();\n      })\n  }\n  function dateBuilder(d) {\n    let strTime = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n    let weekDay = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return `${strTime}, ${weekDay[d.getDay()]}, ${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}.`\n  }\n  return (\n    <div className=\"container\">\n      <h1 className=\"main-title\">REACT 5-DAY WEATHER APP</h1>\n      <input type=\"text\" className=\"search-box\" ref={inputRef} autoFocus placeholder=\"Search Location\" onKeyPress={e => { if (e.key === 'Enter') search(inputRef.current.value) }} />\n      <button className=\"search-btn\" onClick={() => { search(inputRef.current.value) }}>Search</button>\n      {(typeof weatherReport.list != 'undefined') ? (\n        <div className=\"weather-content\">\n          <h1 className=\"location\">{weatherReport.city.name},{weatherReport.city.country}</h1>\n          <p className=\"time\">{dateBuilder(new Date())}</p>\n          <div className=\"current-weather\">\n            <img className=\"mx-auto d-block\" src={`http://openweathermap.org/img/wn/${weatherReport.list[0].weather[0].icon}.png`} alt=\"icon\" />\n            <p><span>{Math.round(weatherReport.list[0].main.temp)}°C</span><br />{Math.round(weatherReport.list[0].main.temp_min * 10) / 10}°C/{Math.round(weatherReport.list[0].main.temp_max * 10) / 10}°C <br />{weatherReport.list[0].weather[0].description}</p>\n          </div>\n          <div className=\"weather-group\">\n            < WeatherBox weatherReport={weatherReport} value={n} n={1} />\n            < WeatherBox weatherReport={weatherReport} value={n + 8} n={2} />\n            < WeatherBox weatherReport={weatherReport} value={n + 16} n={3} />\n            < WeatherBox weatherReport={weatherReport} value={n + 24} n={4} />\n          </div>\n        </div>\n      ) : (<p> Location not found.</p>)}\n      <p className=\"last-note\">Made with love by TJ SWAROOP</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}